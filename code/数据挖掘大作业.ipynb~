{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "030cc618",
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "import pandas as pd \n",
    "import numpy as np\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as Fun\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a7c55e75",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "525acd2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import json\n",
    "import numpy as np\n",
    "with open('/Users/cynthia/Desktop/大三下课程/数据挖掘/code/data/TrainData.json','r') as file:\n",
    "    train=json.load(file)\n",
    "with open('/Users/cynthia/Desktop/大三下课程/数据挖掘/code/data/TestData.json','r') as file:\n",
    "    test=json.load(file)\n",
    "\n",
    "def normal(data):\n",
    "    le=len(data)\n",
    "    replace=[0]*len(data)\n",
    "    maxx1=np.zeros(le)\n",
    "    minn1=np.zeros(le)\n",
    "    maxx2=np.zeros(le)\n",
    "    minn2=np.zeros(le)\n",
    "    maxx3=np.zeros(le)\n",
    "    minn3=np.zeros(le)\n",
    "    maxx4=np.zeros(le)\n",
    "    minn4=np.zeros(le)\n",
    "    for i in range(le):\n",
    "        maxx1[i]=np.array(data[i]).ravel().reshape(-1,7).max(axis=0)[2]\n",
    "        minn1[i]=np.array(data[i]).ravel().reshape(-1,7).min(axis=0)[2]\n",
    "        maxx2[i]=np.array(data[i]).ravel().reshape(-1,7).max(axis=0)[3]\n",
    "        minn2[i]=np.array(data[i]).ravel().reshape(-1,7).min(axis=0)[3]\n",
    "        maxx3[i]=np.array(data[i]).ravel().reshape(-1,7).max(axis=0)[4]\n",
    "        minn3[i]=np.array(data[i]).ravel().reshape(-1,7).min(axis=0)[4]\n",
    "        maxx4[i]=np.array(data[i]).ravel().reshape(-1,7).max(axis=0)[5]\n",
    "        minn4[i]=np.array(data[i]).ravel().reshape(-1,7).min(axis=0)[5]\n",
    "    max1=maxx1.max()\n",
    "    min1=minn1.min()\n",
    "    max2=maxx2.max()\n",
    "    min2=minn2.min()\n",
    "    max3=maxx3.max()\n",
    "    min3=minn3.min()\n",
    "    max4=maxx4.max()\n",
    "    min4=minn4.min()\n",
    "    for i in range(le):\n",
    "        a=np.array(data[i])[:,2:6].copy()\n",
    "        b=np.zeros((a.shape[0],4))\n",
    "        b[:,0]=(a[:,0]-min1)/(max1-min1)\n",
    "        b[:,1]=(a[:,1]-min2)/(max2-min2)\n",
    "        b[:,2]=(a[:,2]-min3)/(max3-min3)\n",
    "        b[:,3]=(a[:,3]-min4)/(max4-min4)\n",
    "        replace[i]=b.copy()\n",
    "    return replace,[max1,min1,max1-min1],[max2,min2,max2-min2],[max3,min3,max3-min3],[max4,min4,max4-min4]\n",
    "\n",
    "def moving(step,array):\n",
    "    maxlength=array.shape[0]-step\n",
    "    feature_X=np.zeros((maxlength,4*step))\n",
    "    feature_y=np.zeros((maxlength,4))\n",
    "    for i in range(maxlength):\n",
    "        feature_X[i,:]=array[i:i+step,:].ravel()\n",
    "        feature_y[i,:]=array[i+step,:]\n",
    "    return feature_X,feature_y\n",
    "\n",
    "def feature(data,length): #length:窗口长度\n",
    "    listX=[0]*len(data)\n",
    "    listY=[0]*len(data)\n",
    "    i=0\n",
    "    num=[0]\n",
    "    for i in range(len(data)):\n",
    "        if(np.array(data[i]).shape[0]<length):\n",
    "            num.append(i)\n",
    "            continue\n",
    "        listX[i]=moving(length,np.array(data[i]))[0]\n",
    "        listY[i]=moving(length,np.array(data[i]))[1]\n",
    "    listX=[i for numi,i in enumerate(listX) if numi not in num[1:]]\n",
    "    listY=[i for numi,i in enumerate(listY) if numi not in num[1:]]\n",
    "    for i in range(len(listX)-1):\n",
    "        listX[i+1]=np.vstack((listX[i],listX[i+1]))\n",
    "        listY[i+1]=np.vstack((listY[i],listY[i+1]))\n",
    "    return listX[len(listX)-1],listY[len(listY)-1]\n",
    "\n",
    "norm_train=normal(train)[0]\n",
    "norm_test=normal(test)[0]\n",
    "norm_test\n",
    "def itter(test,Len):\n",
    "    num=[0]\n",
    "    for i in range(len(test)):\n",
    "        if(np.array(test[i]).shape[0]<=(Len+3)):\n",
    "            num.append(i)\n",
    "            continue\n",
    "    test=[i for numi,i in enumerate(test) if numi not in num[1:]]\n",
    "    predict=np.zeros((Len*len(test),4))\n",
    "    nono=np.zeros((Len*len(test),4))\n",
    "    for i in range(len(test)):\n",
    "        original=torch.FloatTensor(np.array(test[i])[0:4,:].ravel())\n",
    "        for j in range(Len):\n",
    "            a=net(original).detach().numpy()\n",
    "            predict[Len*i+j,:]=a\n",
    "            nono[Len*i+j,:]=np.array(test[i])[4+j,:]\n",
    "            original=torch.FloatTensor(np.hstack((original[4:16],a)))\n",
    "    return predict,nono\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5b2276ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 1])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=np.array([1,1,1])\n",
    "b=np.vstack((a,a))\n",
    "b[1,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "66cd1686",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error,r2_score\n",
    " \n",
    "def evaluation(y_test, y_predict):\n",
    "    rmse = np.sqrt(mean_squared_error(y_test, y_predict))\n",
    "    return rmse"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a7530ce7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2,\n",
       " 1.1137749,\n",
       " [1.1286725,\n",
       "  1.1137749,\n",
       "  1.4521428,\n",
       "  1.3136262,\n",
       "  1.5471578,\n",
       "  1.610989,\n",
       "  1.3829916,\n",
       "  1.2896899,\n",
       "  1.6918637,\n",
       "  1.4650996,\n",
       "  1.7764312,\n",
       "  1.5247269,\n",
       "  2.089587,\n",
       "  1.6482651,\n",
       "  1.8674885,\n",
       "  2.144341,\n",
       "  1.9505525,\n",
       "  1.9941534,\n",
       "  2.122658,\n",
       "  2.069059])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def mainfun():\n",
    "    n=20\n",
    "    rmse_value=[0]*n\n",
    "    for smooth in range(1,n+1):\n",
    "        lr        = 0.02 # 学习率\n",
    "        epochs    = 500  # 训练轮数 \n",
    "        n_feature = 4*smooth   # 输入特征\n",
    "        n_hidden  = 30   # 隐含层\n",
    "        n_output  = 4    # 输出\n",
    "        train_X=feature(norm_train,smooth)[0]\n",
    "        train_y=feature(norm_train,smooth)[1]\n",
    "        test_X=feature(norm_test,smooth)[0]\n",
    "        test_y=feature(norm_test,smooth)[1]\n",
    "        \n",
    "        x_train=torch.FloatTensor(train_X)\n",
    "        y_train=torch.FloatTensor(train_y)\n",
    "        x_test=torch.FloatTensor(test_X)\n",
    "        y_test=torch.FloatTensor(test_y)\n",
    "        class BPNetModel(torch.nn.Module):\n",
    "            def __init__(self,n_feature,n_hidden,n_output):\n",
    "                super(BPNetModel, self).__init__()\n",
    "                self.hiddden=torch.nn.Linear(n_feature,n_hidden)#定义隐层网络\n",
    "                self.out=torch.nn.Linear(n_hidden,n_output)#定义输出层网络\n",
    "            def forward(self,x):\n",
    "                x=Fun.relu(self.hiddden(x)) #隐层激活函数采用relu()函数\n",
    "                out=self.out(x) #输出层\n",
    "                return out\n",
    "            #定义优化器和损失函数\n",
    "            #定义优化器和损失函数\n",
    "        net=BPNetModel(n_feature=n_feature,n_hidden=n_hidden,n_output=n_output) #调用网络\n",
    "        optimizer=torch.optim.Adam(net.parameters(),lr=lr) #使用Adam优化器，并设置学习率\n",
    "        loss_fun=torch.nn.MSELoss() #多分类交叉熵损失函数\n",
    "        #训练数据\n",
    "        loss_steps=np.zeros(epochs) #构造一个array([ 0., 0., 0., 0., 0.])里面有epochs个0\n",
    "        accuracy_steps=np.zeros(epochs)\n",
    "        for epoch in range(epochs):\n",
    "            y_pred=net(x_train) #前向传播\n",
    "            loss=loss_fun(y_pred,y_train)#预测值和真实值对比\n",
    "            optimizer.zero_grad() #梯度清零\n",
    "            loss.backward() #反向传播\n",
    "            optimizer.step() #更新梯度\n",
    "            loss_steps[epoch]=loss.item()#保存loss\n",
    "            running_loss = loss.item()\n",
    "            #print(f\"第{epoch}次训练，loss={running_loss}\".format(epoch,running_loss))\n",
    "        change=normal(test)\n",
    "        y_predict=net(x_test).detach().numpy()\n",
    "        ytest=y_test.detach().numpy()\n",
    "        for i in range(4):\n",
    "            y_predict[:,i]=y_predict[:,i]*change[1+i][2]+change[1+i][1]\n",
    "            ytest[:,i]=ytest[:,i]*change[1+i][2]+change[1+i][1]\n",
    "        rmse_value[smooth-1]=evaluation(ytest[:,0:2]*0.1,y_predict[:,0:2]*0.1)\n",
    "    return rmse_value.index(min(rmse_value))+1,min(rmse_value),rmse_value\n",
    "mainfun()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b91ee46",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# 上面的mainfun函数选出最佳窗口值为2（从1-20里面选出来的），此时RMSE最小，接下来，我把2作为窗口值进行预测"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "53993a52",
   "metadata": {},
   "outputs": [],
   "source": [
    "smooth=4\n",
    "\n",
    "train_X=feature(norm_train,smooth)[0]\n",
    "train_y=feature(norm_train,smooth)[1]\n",
    "test_X=feature(norm_test,smooth)[0]\n",
    "test_y=feature(norm_test,smooth)[1]\n",
    "\n",
    "x_train=torch.FloatTensor(train_X)\n",
    "y_train=torch.FloatTensor(train_y)\n",
    "x_test=torch.FloatTensor(test_X)\n",
    "y_test=torch.FloatTensor(test_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a52b4745",
   "metadata": {},
   "outputs": [],
   "source": [
    "lr        = 0.02 # 学习率\n",
    "epochs    = 500  # 训练轮数 \n",
    "n_feature = 4*smooth   # 输入特征\n",
    "n_hidden  = 30   # 隐含层\n",
    "n_output  = 4    # 输出\n",
    "\n",
    "class BPNetModel(torch.nn.Module):\n",
    "    def __init__(self,n_feature,n_hidden,n_output):\n",
    "        super(BPNetModel, self).__init__()\n",
    "        self.hiddden=torch.nn.Linear(n_feature,n_hidden)#定义隐层网络\n",
    "        self.out=torch.nn.Linear(n_hidden,n_output)#定义输出层网络\n",
    "    def forward(self,x):\n",
    "        x=torch.tanh(self.hiddden(x)) #隐层激活函数采用relu()函数\n",
    "        out=self.out(x) #输出层\n",
    "        return out\n",
    "#定义优化器和损失函数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "125aed17",
   "metadata": {},
   "outputs": [],
   "source": [
    "#定义优化器和损失函数\n",
    "\n",
    "net=BPNetModel(n_feature=n_feature,n_hidden=n_hidden,n_output=n_output) #调用网络\n",
    "optimizer=torch.optim.Adam(net.parameters(),lr=lr) #使用Adam优化器，并设置学习率\n",
    "loss_fun=torch.nn.MSELoss() #多分类交叉熵损失函数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0982cf9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#训练数据\n",
    "loss_steps=np.zeros(epochs) #构造一个array([ 0., 0., 0., 0., 0.])里面有epochs个0\n",
    "accuracy_steps=np.zeros(epochs)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bf1ae0c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "第0次训练，loss=0.22569353878498077\n",
      "第1次训练，loss=0.03503923490643501\n",
      "第2次训练，loss=0.09009882807731628\n",
      "第3次训练，loss=0.08299520611763\n",
      "第4次训练，loss=0.036872390657663345\n",
      "第5次训练，loss=0.028399620205163956\n",
      "第6次训练，loss=0.04080801084637642\n",
      "第7次训练，loss=0.04293345287442207\n",
      "第8次训练，loss=0.0333431251347065\n",
      "第9次训练，loss=0.02277124673128128\n",
      "第10次训练，loss=0.018092559650540352\n",
      "第11次训练，loss=0.01785852760076523\n",
      "第12次训练，loss=0.017653172835707664\n",
      "第13次训练，loss=0.0160142220556736\n",
      "第14次训练，loss=0.013992800377309322\n",
      "第15次训练，loss=0.01256628055125475\n",
      "第16次训练，loss=0.01165944803506136\n",
      "第17次训练，loss=0.01062466949224472\n",
      "第18次训练，loss=0.009244524873793125\n",
      "第19次训练，loss=0.00807679072022438\n",
      "第20次训练，loss=0.00775948679074645\n",
      "第21次训练，loss=0.00820047315210104\n",
      "第22次训练，loss=0.008575865998864174\n",
      "第23次训练，loss=0.008086058311164379\n",
      "第24次训练，loss=0.006682214327156544\n",
      "第25次训练，loss=0.005123333539813757\n",
      "第26次训练，loss=0.004323295317590237\n",
      "第27次训练，loss=0.004607765004038811\n",
      "第28次训练，loss=0.005461953114718199\n",
      "第29次训练，loss=0.005894409026950598\n",
      "第30次训练，loss=0.005274270195513964\n",
      "第31次训练，loss=0.00398199912160635\n",
      "第32次训练，loss=0.0030539771541953087\n",
      "第33次训练，loss=0.003113815560936928\n",
      "第34次训练，loss=0.0038126700092107058\n",
      "第35次训练，loss=0.004324126522988081\n",
      "第36次训练，loss=0.004169050604104996\n",
      "第37次训练，loss=0.0035017910413444042\n",
      "第38次训练，loss=0.0028283074498176575\n",
      "第39次训练，loss=0.0025699099060148\n",
      "第40次训练，loss=0.002761097392067313\n",
      "第41次训练，loss=0.0030673514120280743\n",
      "第42次训练，loss=0.003124193288385868\n",
      "第43次训练，loss=0.0028570489957928658\n",
      "第44次训练，loss=0.0024733091704547405\n",
      "第45次训练，loss=0.002229801146313548\n",
      "第46次训练，loss=0.002235962310805917\n",
      "第47次训练，loss=0.002394643845036626\n",
      "第48次训练，loss=0.0024935996625572443\n",
      "第49次训练，loss=0.0024064022582024336\n",
      "第50次训练，loss=0.0022163770627230406\n",
      "第51次训练，loss=0.002101757563650608\n",
      "第52次训练，loss=0.0021195325534790754\n",
      "第53次训练，loss=0.0021690919529646635\n",
      "第54次训练，loss=0.00215319381095469\n",
      "第55次训练，loss=0.002087981440126896\n",
      "第56次训练，loss=0.0020392313599586487\n",
      "第57次训练，loss=0.0020215152762830257\n",
      "第58次训练，loss=0.00199743639677763\n",
      "第59次训练，loss=0.001945605967193842\n",
      "第60次训练，loss=0.0018945499323308468\n",
      "第61次训练，loss=0.0018813590286299586\n",
      "第62次训练，loss=0.0018936455016955733\n",
      "第63次训练，loss=0.0018818563548848033\n",
      "第64次训练，loss=0.0018294422188773751\n",
      "第65次训练，loss=0.0017752276035025716\n",
      "第66次训练，loss=0.0017566385213285685\n",
      "第67次训练，loss=0.001764483517035842\n",
      "第68次训练，loss=0.001765277935191989\n",
      "第69次训练，loss=0.0017410202417522669\n",
      "第70次训练，loss=0.0016998115461319685\n",
      "第71次训练，loss=0.0016646974254399538\n",
      "第72次训练，loss=0.0016517126932740211\n",
      "第73次训练，loss=0.0016520788194611669\n",
      "第74次训练，loss=0.0016429434763267636\n",
      "第75次训练，loss=0.001615364570170641\n",
      "第76次训练，loss=0.0015825850423425436\n",
      "第77次训练，loss=0.0015622173668816686\n",
      "第78次训练，loss=0.00155594851821661\n",
      "第79次训练，loss=0.0015487815253436565\n",
      "第80次训练，loss=0.0015296362107619643\n",
      "第81次训练，loss=0.0015055914409458637\n",
      "第82次训练，loss=0.0014881170354783535\n",
      "第83次训练，loss=0.0014761709608137608\n",
      "第84次训练，loss=0.0014628310455009341\n",
      "第85次训练，loss=0.0014470835449174047\n",
      "第86次训练，loss=0.0014312349958345294\n",
      "第87次训练，loss=0.0014157872647047043\n",
      "第88次训练，loss=0.001400628825649619\n",
      "第89次训练，loss=0.0013860916951671243\n",
      "第90次训练，loss=0.0013723274460062385\n",
      "第91次训练，loss=0.001359183108434081\n",
      "第92次训练，loss=0.0013460067566484213\n",
      "第93次训练，loss=0.0013321622973307967\n",
      "第94次训练，loss=0.0013179860543459654\n",
      "第95次训练，loss=0.001304461038671434\n",
      "第96次训练，loss=0.0012922690948471427\n",
      "第97次训练，loss=0.0012807975290343165\n",
      "第98次训练，loss=0.0012682558735832572\n",
      "第99次训练，loss=0.001254407106898725\n",
      "第100次训练，loss=0.0012415323872119188\n",
      "第101次训练，loss=0.001230680150911212\n",
      "第102次训练，loss=0.001220018952153623\n",
      "第103次训练，loss=0.001208229106850922\n",
      "第104次训练，loss=0.0011961787240579724\n",
      "第105次训练，loss=0.0011849731672555208\n",
      "第106次训练，loss=0.0011747099924832582\n",
      "第107次训练，loss=0.0011647556675598025\n",
      "第108次训练，loss=0.0011544227600097656\n",
      "第109次训练，loss=0.0011438181390985847\n",
      "第110次训练，loss=0.0011337368050590158\n",
      "第111次训练，loss=0.0011244708439335227\n",
      "第112次训练，loss=0.0011154204839840531\n",
      "第113次训练，loss=0.0011061312397941947\n",
      "第114次训练，loss=0.001096967258490622\n",
      "第115次训练，loss=0.0010883278446272016\n",
      "第116次训练，loss=0.001080024754628539\n",
      "第117次训练，loss=0.0010718466946855187\n",
      "第118次训练，loss=0.0010638489620760083\n",
      "第119次训练，loss=0.001056045526638627\n",
      "第120次训练，loss=0.0010484650265425444\n",
      "第121次训练，loss=0.0010411585681140423\n",
      "第122次训练，loss=0.0010340492008253932\n",
      "第123次训练，loss=0.0010271340142935514\n",
      "第124次训练，loss=0.001020477619022131\n",
      "第125次训练，loss=0.001013997127301991\n",
      "第126次训练，loss=0.001007664017379284\n",
      "第127次训练，loss=0.0010015942389145494\n",
      "第128次训练，loss=0.0009957855800166726\n",
      "第129次训练，loss=0.0009901240700855851\n",
      "第130次训练，loss=0.0009845896856859326\n",
      "第131次训练，loss=0.0009792534401640296\n",
      "第132次训练，loss=0.0009741517715156078\n",
      "第133次训练，loss=0.0009692434105090797\n",
      "第134次训练，loss=0.0009644686942920089\n",
      "第135次训练，loss=0.0009598215110599995\n",
      "第136次训练，loss=0.0009553589625284076\n",
      "第137次训练，loss=0.0009511064854450524\n",
      "第138次训练，loss=0.0009469955693930387\n",
      "第139次训练，loss=0.00094298628391698\n",
      "第140次训练，loss=0.0009391227504238486\n",
      "第141次训练，loss=0.0009354223730042577\n",
      "第142次训练，loss=0.0009318604716099799\n",
      "第143次训练，loss=0.0009284148691222072\n",
      "第144次训练，loss=0.0009250742150470614\n",
      "第145次训练，loss=0.0009218555642291903\n",
      "第146次训练，loss=0.0009187675314024091\n",
      "第147次训练，loss=0.000915782991796732\n",
      "第148次训练，loss=0.0009128915844485164\n",
      "第149次训练，loss=0.0009101015166379511\n",
      "第150次训练，loss=0.0009074085392057896\n",
      "第151次训练，loss=0.0009048059582710266\n",
      "第152次训练，loss=0.0009022898157127202\n",
      "第153次训练，loss=0.0008998532430268824\n",
      "第154次训练，loss=0.0008974940865300596\n",
      "第155次训练，loss=0.0008952100179158151\n",
      "第156次训练，loss=0.000892996322363615\n",
      "第157次训练，loss=0.0008908511372283101\n",
      "第158次训练，loss=0.0008887705625966191\n",
      "第159次训练，loss=0.0008867473807185888\n",
      "第160次训练，loss=0.0008847815333865583\n",
      "第161次训练，loss=0.0008828737773001194\n",
      "第162次训练，loss=0.0008810179424472153\n",
      "第163次训练，loss=0.0008792091393843293\n",
      "第164次训练，loss=0.0008774462039582431\n",
      "第165次训练，loss=0.0008757288451306522\n",
      "第166次训练，loss=0.0008740558987483382\n",
      "第167次训练，loss=0.0008724216022528708\n",
      "第168次训练，loss=0.0008708229870535433\n",
      "第169次训练，loss=0.0008692620904184878\n",
      "第170次训练，loss=0.0008677367004565895\n",
      "第171次训练，loss=0.0008662434993311763\n",
      "第172次训练，loss=0.0008647801005281508\n",
      "第173次训练，loss=0.0008633459219709039\n",
      "第174次训练，loss=0.0008619410800747573\n",
      "第175次训练，loss=0.0008605629554949701\n",
      "第176次训练，loss=0.0008592093945480883\n",
      "第177次训练，loss=0.0008578801061958075\n",
      "第178次训练，loss=0.0008565745665691793\n",
      "第179次训练，loss=0.0008552909712307155\n",
      "第180次训练，loss=0.0008540283888578415\n",
      "第181次训练，loss=0.0008527857135049999\n",
      "第182次训练，loss=0.0008515624213032424\n",
      "第183次训练，loss=0.0008503577555529773\n",
      "第184次训练，loss=0.0008491706103086472\n",
      "第185次训练，loss=0.0008480001706629992\n",
      "第186次训练，loss=0.0008468461455777287\n",
      "第187次训练，loss=0.0008457075455226004\n",
      "第188次训练，loss=0.000844583788421005\n",
      "第189次训练，loss=0.0008434744086116552\n",
      "第190次训练，loss=0.0008423786493949592\n",
      "第191次训练，loss=0.0008412960451096296\n",
      "第192次训练，loss=0.0008402260136790574\n",
      "第193次训练，loss=0.0008391683222725987\n",
      "第194次训练，loss=0.0008381223306059837\n",
      "第195次训练，loss=0.0008370873401872814\n",
      "第196次训练，loss=0.0008360632928088307\n",
      "第197次训练，loss=0.0008350496063940227\n",
      "第198次训练，loss=0.0008340459899045527\n",
      "第199次训练，loss=0.0008330519194714725\n",
      "第200次训练，loss=0.0008320672204717994\n",
      "第201次训练，loss=0.0008310913690365851\n",
      "第202次训练，loss=0.0008301241905428469\n",
      "第203次训练，loss=0.0008291652775369585\n",
      "第204次训练，loss=0.0008282142807729542\n",
      "第205次训练，loss=0.0008272709674201906\n",
      "第206次训练，loss=0.0008263351046480238\n",
      "第207次训练，loss=0.0008254064596258104\n",
      "第208次训练，loss=0.000824484508484602\n",
      "第209次训练，loss=0.0008235693094320595\n",
      "第210次训练，loss=0.0008226605132222176\n",
      "第211次训练，loss=0.0008217578870244324\n",
      "第212次训练，loss=0.0008208610233850777\n",
      "第213次训练，loss=0.0008199700969271362\n",
      "第214次训练，loss=0.0008190845837816596\n",
      "第215次训练，loss=0.0008182045421563089\n",
      "第216次训练，loss=0.0008173295645974576\n",
      "第217次训练，loss=0.000816459534689784\n",
      "第218次训练，loss=0.0008155943360179663\n",
      "第219次训练，loss=0.0008147337357513607\n",
      "第220次训练，loss=0.0008138776756823063\n",
      "第221次训练，loss=0.0008130259811878204\n",
      "第222次训练，loss=0.0008121783612295985\n",
      "第223次训练，loss=0.0008113348740153015\n",
      "第224次训练，loss=0.0008104952867142856\n",
      "第225次训练，loss=0.00080965954111889\n",
      "第226次训练，loss=0.000808827462606132\n",
      "第227次训练，loss=0.0008079989347606897\n",
      "第228次训练，loss=0.0008071737829595804\n",
      "第229次训练，loss=0.000806352065410465\n",
      "第230次训练，loss=0.0008055336074903607\n",
      "第231次训练，loss=0.0008047182927839458\n",
      "第232次训练，loss=0.0008039061212912202\n",
      "第233次训练，loss=0.0008030969183892012\n",
      "第234次训练，loss=0.000802290509454906\n",
      "第235次训练，loss=0.0008014869526959956\n",
      "第236次训练，loss=0.000800686189904809\n",
      "第237次训练，loss=0.0007998881046660244\n",
      "第238次训练，loss=0.0007990927551873028\n",
      "第239次训练，loss=0.0007982998504303396\n",
      "第240次训练，loss=0.0007975095068104565\n",
      "第241次训练，loss=0.0007967215497046709\n",
      "第242次训练，loss=0.0007959360955283046\n",
      "第243次训练，loss=0.000795152853243053\n",
      "第244次训练，loss=0.0007943719392642379\n",
      "第245次训练，loss=0.0007935933535918593\n",
      "第246次训练，loss=0.0007928168633952737\n",
      "第247次训练，loss=0.0007920427015051246\n",
      "第248次训练，loss=0.0007912705186754465\n",
      "第249次训练，loss=0.0007905004895292222\n",
      "第250次训练，loss=0.0007897326140664518\n",
      "第251次训练，loss=0.0007889665430411696\n",
      "第252次训练，loss=0.0007882027421146631\n",
      "第253次训练，loss=0.000787440687417984\n",
      "第254次训练，loss=0.0007866808446124196\n",
      "第255次训练，loss=0.0007859226898290217\n",
      "第256次训练，loss=0.0007851665723137558\n",
      "第257次训练，loss=0.000784412317443639\n",
      "第258次训练，loss=0.0007836598670110106\n",
      "第259次训练，loss=0.0007829092792235315\n",
      "第260次训练，loss=0.0007821606122888625\n",
      "第261次训练，loss=0.0007814136333763599\n",
      "第262次训练，loss=0.0007806684006936848\n",
      "第263次训练，loss=0.0007799250888638198\n",
      "第264次训练，loss=0.0007791834650561213\n",
      "第265次训练，loss=0.0007784435874782503\n",
      "第266次训练，loss=0.0007777054561302066\n",
      "第267次训练，loss=0.0007769690710119903\n",
      "第268次训练，loss=0.0007762343157082796\n",
      "第269次训练，loss=0.0007755013648420572\n",
      "第270次训练，loss=0.0007747701602056623\n",
      "第271次训练，loss=0.0007740405853837729\n",
      "第272次训练，loss=0.0007733126985840499\n",
      "第273次训练，loss=0.0007725863833911717\n",
      "第274次训练，loss=0.0007718618144281209\n",
      "第275次训练，loss=0.0007711388170719147\n",
      "第276次训练，loss=0.0007704175659455359\n",
      "第277次训练，loss=0.0007696979446336627\n",
      "第278次训练，loss=0.0007689800695516169\n",
      "第279次训练，loss=0.0007682637078687549\n",
      "第280次训练，loss=0.0007675489760003984\n",
      "第281次训练，loss=0.0007668358157388866\n",
      "第282次训练，loss=0.0007661244599148631\n",
      "第283次训练，loss=0.0007654146174900234\n",
      "第284次训练，loss=0.0007647063466720283\n",
      "第285次训练，loss=0.0007639997056685388\n",
      "第286次训练，loss=0.0007632946944795549\n",
      "第287次训练，loss=0.0007625913131050766\n",
      "第288次训练，loss=0.0007618895033374429\n",
      "第289次训练，loss=0.0007611893815919757\n",
      "第290次训练，loss=0.0007604907732456923\n",
      "第291次训练，loss=0.0007597938529215753\n",
      "第292次训练，loss=0.0007590982713736594\n",
      "第293次训练，loss=0.0007584044360555708\n",
      "第294次训练，loss=0.0007577123469673097\n",
      "第295次训练，loss=0.0007570215966552496\n",
      "第296次训练，loss=0.0007563325925730169\n",
      "第297次训练，loss=0.0007556451018899679\n",
      "第298次训练，loss=0.0007549593574367464\n",
      "第299次训练，loss=0.0007542750099673867\n",
      "第300次训练，loss=0.0007535923505201936\n",
      "第301次训练，loss=0.0007529112044721842\n",
      "第302次训练，loss=0.0007522316300310194\n",
      "第303次训练，loss=0.0007515536271966994\n",
      "第304次训练，loss=0.000750877195969224\n",
      "第305次训练，loss=0.0007502023945562541\n",
      "第306次训练，loss=0.0007495292811654508\n",
      "第307次训练，loss=0.0007488576229661703\n",
      "第308次训练，loss=0.0007481874781660736\n",
      "第309次训练，loss=0.0007475190795958042\n",
      "第310次训练，loss=0.0007468520780093968\n",
      "第311次训练，loss=0.0007461867644451559\n",
      "第312次训练，loss=0.0007455230224877596\n",
      "第313次训练，loss=0.0007448607357218862\n",
      "第314次训练，loss=0.0007442000787705183\n",
      "第315次训练，loss=0.000743541051633656\n",
      "第316次训练，loss=0.0007428834796883166\n",
      "第317次训练，loss=0.0007422275957651436\n",
      "第318次训练，loss=0.0007415731670334935\n",
      "第319次训练，loss=0.0007409204263240099\n",
      "第320次训练，loss=0.0007402692572213709\n",
      "第321次训练，loss=0.0007396195433102548\n",
      "第322次训练，loss=0.0007389715174213052\n",
      "第323次训练，loss=0.0007383249467238784\n",
      "第324次训练，loss=0.0007376799476332963\n",
      "第325次训练，loss=0.0007370364619418979\n",
      "第326次训练，loss=0.0007363947224803269\n",
      "第327次训练，loss=0.0007357543800026178\n",
      "第328次训练，loss=0.0007351157255470753\n",
      "第329次训练，loss=0.0007344784680753946\n",
      "第330次训练，loss=0.0007338428986258805\n",
      "第331次训练，loss=0.000733208900783211\n",
      "第332次训练，loss=0.0007325764163397253\n",
      "第333次训练，loss=0.0007319455035030842\n",
      "第334次训练，loss=0.0007313161622732878\n",
      "第335次训练，loss=0.0007306882180273533\n",
      "第336次训练，loss=0.0007300619618035853\n",
      "第337次训练，loss=0.0007294373353943229\n",
      "第338次训练，loss=0.0007288141641765833\n",
      "第339次训练，loss=0.0007281925063580275\n",
      "第340次训练，loss=0.0007275725365616381\n",
      "第341次训练，loss=0.0007269540801644325\n",
      "第342次训练，loss=0.0007263370789587498\n",
      "第343次训练，loss=0.0007257216493599117\n",
      "第344次训练，loss=0.0007251078495755792\n",
      "第345次训练，loss=0.0007244955631904304\n",
      "第346次训练，loss=0.0007238847902044654\n",
      "第347次训练，loss=0.0007232755306176841\n",
      "第348次训练，loss=0.0007226679008454084\n",
      "第349次训练，loss=0.0007220618426799774\n",
      "第350次训练，loss=0.0007214572397060692\n",
      "第351次训练，loss=0.0007208542665466666\n",
      "第352次训练，loss=0.0007202527485787868\n",
      "第353次训练，loss=0.0007196528022177517\n",
      "第354次训练，loss=0.0007190544274635613\n",
      "第355次训练，loss=0.0007184575661085546\n",
      "第356次训练，loss=0.0007178622181527317\n",
      "第357次训练，loss=0.0007172684418037534\n",
      "第358次训练，loss=0.0007166762370616198\n",
      "第359次训练，loss=0.000716085487511009\n",
      "第360次训练，loss=0.0007154963095672429\n",
      "第361次训练，loss=0.0007149087032303214\n",
      "第362次训练，loss=0.0007143224938772619\n",
      "第363次训练，loss=0.0007137379725463688\n",
      "第364次训练，loss=0.0007131549064069986\n",
      "第365次训练，loss=0.0007125734118744731\n",
      "第366次训练，loss=0.0007119934889487922\n",
      "第367次训练，loss=0.0007114150212146342\n",
      "第368次训练，loss=0.0007108380668796599\n",
      "第369次训练，loss=0.0007102625677362084\n",
      "第370次训练，loss=0.0007096887566149235\n",
      "第371次训练，loss=0.0007091164006851614\n",
      "第372次训练，loss=0.000708545558154583\n",
      "第373次训练，loss=0.0007079762290231884\n",
      "第374次训练，loss=0.0007074084714986384\n",
      "第375次训练，loss=0.0007068421691656113\n",
      "第376次训练，loss=0.0007062773802317679\n",
      "第377次训练，loss=0.000705714279320091\n",
      "第378次训练，loss=0.0007051524589769542\n",
      "第379次训练，loss=0.0007045922102406621\n",
      "第380次训练，loss=0.0007040335913188756\n",
      "第381次训练，loss=0.0007034763693809509\n",
      "第382次训练，loss=0.000702920719049871\n",
      "第383次训练，loss=0.0007023665821179748\n",
      "第384次训练，loss=0.0007018139003776014\n",
      "第385次训练，loss=0.0007012627902440727\n",
      "第386次训练，loss=0.0007007131353020668\n",
      "第387次训练，loss=0.0007001649937592447\n",
      "第388次训练，loss=0.0006996184238232672\n",
      "第389次训练，loss=0.0006990733090788126\n",
      "第390次训练，loss=0.0006985297077335417\n",
      "第391次训练，loss=0.0006979875615797937\n",
      "第392次训练，loss=0.0006974469870328903\n",
      "第393次训练，loss=0.0006969079258851707\n",
      "第394次训练，loss=0.000696370261721313\n",
      "第395次训练，loss=0.0006958341691643\n",
      "第396次训练，loss=0.0006952995900064707\n",
      "第397次训练，loss=0.0006947664660401642\n",
      "第398次训练，loss=0.0006942347972653806\n",
      "第399次训练，loss=0.0006937047000974417\n",
      "第400次训练，loss=0.0006931760581210256\n",
      "第401次训练，loss=0.0006926489877514541\n",
      "第402次训练，loss=0.0006921232561580837\n",
      "第403次训练，loss=0.0006915990961715579\n",
      "第404次训练，loss=0.000691076391376555\n",
      "第405次训练，loss=0.0006905551999807358\n",
      "第406次训练，loss=0.0006900355801917613\n",
      "第407次训练，loss=0.0006895173573866487\n",
      "第408次训练，loss=0.000689000531565398\n",
      "第409次训练，loss=0.0006884853937663138\n",
      "第410次训练，loss=0.0006879715365357697\n",
      "第411次训练，loss=0.0006874593091197312\n",
      "第412次训练，loss=0.0006869484786875546\n",
      "第413次训练，loss=0.0006864391034469008\n",
      "第414次训练，loss=0.0006859312416054308\n",
      "第415次训练，loss=0.0006854248931631446\n",
      "第416次训练，loss=0.0006849199417047203\n",
      "第417次训练，loss=0.0006844165618531406\n",
      "第418次训练，loss=0.0006839145207777619\n",
      "第419次训练，loss=0.0006834141095168889\n",
      "第420次训练，loss=0.0006829150370322168\n",
      "第421次训练，loss=0.0006824174779467285\n",
      "第422次训练，loss=0.0006819214322604239\n",
      "第423次训练，loss=0.0006814267253503203\n",
      "第424次训练，loss=0.0006809335900470614\n",
      "第425次训练，loss=0.0006804418517276645\n",
      "第426次训练，loss=0.0006799516268074512\n",
      "第427次训练，loss=0.0006794628570787609\n",
      "第428次训练，loss=0.0006789754843339324\n",
      "第429次训练，loss=0.0006784895667806268\n",
      "第430次训练，loss=0.0006780052208341658\n",
      "第431次训练，loss=0.0006775222718715668\n",
      "第432次训练，loss=0.0006770407781004906\n",
      "第433次训练，loss=0.0006765606231056154\n",
      "第434次训练，loss=0.0006760820979252458\n",
      "第435次训练，loss=0.0006756049115210772\n",
      "第436次训练，loss=0.0006751292385160923\n",
      "第437次训练，loss=0.0006746549624949694\n",
      "第438次训练，loss=0.0006741821416653693\n",
      "第439次训练，loss=0.0006737107178196311\n",
      "第440次训练，loss=0.0006732407491654158\n",
      "第441次训练，loss=0.0006727722939103842\n",
      "第442次训练，loss=0.0006723052938468754\n",
      "第443次训练，loss=0.0006718396325595677\n",
      "第444次训练，loss=0.0006713754846714437\n",
      "第445次训练，loss=0.0006709126755595207\n",
      "第446次训练，loss=0.0006704514380544424\n",
      "第447次训练，loss=0.0006699915393255651\n",
      "第448次训练，loss=0.0006695330957882106\n",
      "第449次训练，loss=0.0006690760492347181\n",
      "第450次训练，loss=0.0006686204578727484\n",
      "第451次训练，loss=0.0006681663217023015\n",
      "第452次训练，loss=0.0006677135243080556\n",
      "第453次训练，loss=0.0006672621821053326\n",
      "第454次训练，loss=0.0006668122368864715\n",
      "第455次训练，loss=0.0006663638050667942\n",
      "第456次训练，loss=0.0006659167120233178\n",
      "第457次训练，loss=0.0006654710741713643\n",
      "第458次训练，loss=0.0006650268915109336\n",
      "第459次训练，loss=0.0006645839894190431\n",
      "第460次训练，loss=0.0006641426007263362\n",
      "第461次训练，loss=0.0006637025508098304\n",
      "第462次训练，loss=0.0006632639560848475\n",
      "第463次训练，loss=0.0006628268747590482\n",
      "第464次训练，loss=0.0006623910157941282\n",
      "第465次训练，loss=0.0006619566702283919\n",
      "第466次训练，loss=0.0006615236634388566\n",
      "第467次训练，loss=0.0006610919954255223\n",
      "第468次训练，loss=0.0006606618408113718\n",
      "第469次训练，loss=0.0006602331413887441\n",
      "第470次训练，loss=0.0006598057225346565\n",
      "第471次训练，loss=0.0006593796424567699\n",
      "第472次训练，loss=0.0006589550757780671\n",
      "第473次训练，loss=0.0006585317896679044\n",
      "第474次训练，loss=0.0006581099587492645\n",
      "第475次训练，loss=0.0006576895248144865\n",
      "第476次训练，loss=0.0006572704296559095\n",
      "第477次训练，loss=0.0006568526732735336\n",
      "第478次训练，loss=0.0006564363720826805\n",
      "第479次训练，loss=0.0006560214678756893\n",
      "第480次训练，loss=0.0006556079024448991\n",
      "第481次训练，loss=0.0006551956757903099\n",
      "第482次训练，loss=0.0006547847879119217\n",
      "第483次训练，loss=0.0006543754134327173\n",
      "第484次训练，loss=0.0006539672613143921\n",
      "第485次训练，loss=0.0006535605061799288\n",
      "第486次训练，loss=0.0006531551480293274\n",
      "第487次训练，loss=0.0006527510704472661\n",
      "第488次训练，loss=0.0006523484480567276\n",
      "第489次训练，loss=0.0006519472226500511\n",
      "第490次训练，loss=0.0006515472196042538\n",
      "第491次训练，loss=0.0006511485553346574\n",
      "第492次训练，loss=0.0006507513462565839\n",
      "第493次训练，loss=0.0006503553595393896\n",
      "第494次训练，loss=0.0006499608280137181\n",
      "第495次训练，loss=0.0006495675770565867\n",
      "第496次训练，loss=0.0006491756648756564\n",
      "第497次训练，loss=0.0006487851496785879\n",
      "第498次训练，loss=0.0006483959732577205\n",
      "第499次训练，loss=0.0006480080774053931\n"
     ]
    }
   ],
   "source": [
    "for epoch in range(epochs):\n",
    "    y_pred=net(x_train) #前向传播\n",
    "    loss=loss_fun(y_pred,y_train)#预测值和真实值对比\n",
    "    optimizer.zero_grad() #梯度清零\n",
    "    loss.backward() #反向传播\n",
    "    optimizer.step() #更新梯度\n",
    "    loss_steps[epoch]=loss.item()#保存loss\n",
    "    running_loss = loss.item()\n",
    "    print(f\"第{epoch}次训练，loss={running_loss}\".format(epoch,running_loss))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "452a922a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7feed622fc10>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "predict_test=net(x_test).detach().numpy()\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(predict_test[1:100,0])+list(test_y[1:100,0]),\n",
    "    y=list(predict_test[1:100,1])+list(test_y[1:100,1]),\n",
    "    s=[0.5]*(predict_test[1:100,0].shape[0]+test_y[1:100,0].shape[0]),\n",
    "    c=[1]*predict_test[1:100,0].shape[0]+[2]*test_y[1:100,0].shape[0],\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c007817a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.026280701"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#归一化后的rmse\n",
    "y_predict=net(x_test).detach().numpy()\n",
    "ytest=y_test.detach().numpy()\n",
    "evaluation(ytest,y_predict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7bb30fc4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 213., 1121.,  998.,   15.],\n",
       "       [ 225., 1123., 1000.,   13.],\n",
       "       [ 237., 1126., 1002.,   13.],\n",
       "       ...,\n",
       "       [  84., 1005., 1006.,   13.],\n",
       "       [  89.,  996., 1006.,   13.],\n",
       "       [  99.,  990., 1008.,   13.]], dtype=float32)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#逆归一化\n",
    "import os\n",
    "change=normal(test)\n",
    "y_predict=net(x_test).detach().numpy()\n",
    "ytest=y_test.detach().numpy()\n",
    "for i in range(4):\n",
    "    y_predict[:,i]=y_predict[:,i]*change[1+i][2]+change[1+i][1]\n",
    "    ytest[:,i]=ytest[:,i]*change[1+i][2]+change[1+i][1]\n",
    "#逆归一化的rmse\n",
    "evaluation(ytest[:,0:2]*0.1,y_predict[:,0:2]*0.1)\n",
    "ytest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 920,
   "id": "1e17b05b",
   "metadata": {},
   "outputs": [],
   "source": [
    "ytest[:,0:2]=ytest[:,0:2]*0.1\n",
    "y_predict[:,0:2]=y_predict[:,0:2]*0.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 921,
   "id": "6fde4693",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[  21.300001,  112.1     ,  998.      ,   15.      ],\n",
       "       [  22.5     ,  112.3     , 1000.      ,   13.      ],\n",
       "       [  23.7     ,  112.6     , 1002.      ,   13.      ],\n",
       "       ...,\n",
       "       [   8.400001,  100.5     , 1006.      ,   13.      ],\n",
       "       [   8.900001,   99.6     , 1006.      ,   13.      ],\n",
       "       [   9.900001,   99.      , 1008.      ,   13.      ]],\n",
       "      dtype=float32)"
      ]
     },
     "execution_count": 921,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 898,
   "id": "e950f41b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7fe5a77c0290>"
      ]
     },
     "execution_count": 898,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(y_predict[1:20,0])+list(ytest[1:20,0]),\n",
    "    y=list(y_predict[1:20,1])+list(ytest[1:20,1]),\n",
    "    s=[0.5]*(y_predict[1:20,0].shape[0]+ytest[1:20,0].shape[0]),\n",
    "    c=[1]*y_predict[1:20,0].shape[0]+[2]*ytest[1:20,0].shape[0],\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 899,
   "id": "2cfd1466",
   "metadata": {},
   "outputs": [],
   "source": [
    "newy=pd.read_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/test_original.csv')\n",
    "change=normal(test)\n",
    "for i in range(4):\n",
    "    newy.iloc[:,i]=(newy.iloc[:,i]-change[1+i][1])/(change[1+i][2])\n",
    "X=moving(4,newy.values)[0]\n",
    "Y=moving(4,newy.values)[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 900,
   "id": "908f99da",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_tor=torch.FloatTensor(X)\n",
    "Y_tor=torch.FloatTensor(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 901,
   "id": "04a3e550",
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_pre=net(X_tor).detach().numpy()\n",
    "Y_test=Y.copy()\n",
    "for i in range(4):\n",
    "    Y_pre[:,i]=Y_pre[:,i]*change[1+i][2]+change[1+i][1]\n",
    "    Y_test[:,i]=Y_test[:,i]*change[1+i][2]+change[1+i][1]\n",
    "Y_pre[:,0:2]=Y_pre[:,0:2]*0.1\n",
    "Y_test[:,0:2]=Y_test[:,0:2]*0.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 902,
   "id": "a02e0854",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.3002031626896056"
      ]
     },
     "execution_count": 902,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "evaluation(Y_test[:,0:2],Y_pre[:,0:2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 903,
   "id": "b8d2104e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7fe597a8f950>"
      ]
     },
     "execution_count": 903,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(Y_pre[:,0])+list(Y_test[:,0]),\n",
    "    y=list(Y_pre[:,1])+list(Y_test[:,1]),\n",
    "    s=[0.5]*(Y_pre[:,0].shape[0]+Y_test[:,0].shape[0]),\n",
    "    c=[1]*Y_pre[:,0].shape[0]+[2]*Y_test[:,0].shape[0],\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "caad1b9d",
   "metadata": {},
   "source": [
    "# 一直迭代下去"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "b000017f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n",
      "31\n",
      "10\n",
      "15\n",
      "12\n",
      "19\n",
      "31\n",
      "33\n",
      "24\n",
      "20\n",
      "25\n",
      "53\n",
      "13\n",
      "21\n",
      "9\n",
      "34\n",
      "12\n",
      "36\n",
      "29\n",
      "46\n",
      "41\n",
      "27\n",
      "31\n",
      "34\n",
      "31\n",
      "16\n",
      "12\n",
      "17\n",
      "34\n",
      "25\n",
      "27\n",
      "21\n",
      "21\n",
      "15\n",
      "82\n",
      "33\n",
      "14\n",
      "34\n",
      "31\n",
      "33\n",
      "30\n",
      "27\n",
      "26\n",
      "21\n",
      "40\n",
      "22\n",
      "16\n",
      "53\n",
      "22\n",
      "13\n",
      "9\n",
      "25\n",
      "35\n",
      "30\n",
      "21\n",
      "23\n",
      "12\n",
      "40\n",
      "26\n",
      "19\n",
      "26\n",
      "32\n",
      "15\n",
      "50\n",
      "26\n",
      "32\n",
      "30\n",
      "53\n",
      "53\n",
      "52\n",
      "14\n",
      "22\n",
      "62\n",
      "12\n",
      "36\n",
      "53\n",
      "21\n",
      "63\n",
      "64\n",
      "44\n",
      "48\n",
      "31\n",
      "27\n",
      "46\n",
      "52\n",
      "30\n",
      "53\n",
      "39\n",
      "54\n",
      "7\n",
      "36\n",
      "36\n",
      "13\n",
      "20\n",
      "17\n",
      "48\n",
      "11\n",
      "18\n",
      "8\n",
      "17\n",
      "37\n",
      "21\n",
      "31\n",
      "34\n",
      "62\n",
      "48\n",
      "38\n",
      "24\n",
      "45\n",
      "37\n",
      "37\n",
      "16\n",
      "16\n",
      "27\n",
      "37\n",
      "39\n",
      "29\n",
      "30\n",
      "13\n",
      "34\n",
      "28\n",
      "30\n",
      "44\n",
      "25\n",
      "45\n",
      "37\n",
      "37\n",
      "25\n",
      "16\n",
      "55\n",
      "29\n",
      "15\n",
      "17\n",
      "21\n",
      "29\n",
      "37\n",
      "35\n",
      "18\n",
      "37\n",
      "25\n",
      "54\n",
      "20\n",
      "20\n",
      "10\n",
      "30\n",
      "13\n",
      "26\n",
      "44\n",
      "39\n",
      "18\n",
      "33\n",
      "30\n"
     ]
    }
   ],
   "source": [
    "for i in range(len(test)):\n",
    "    print(np.array(test[i]).shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d339965e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.9487651964927262"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "four_ypre=itter(norm_test,4)[0]\n",
    "four_y=itter(norm_test,4)[1]\n",
    "for i in range(4):\n",
    "    four_ypre[:,i]=(four_ypre[:,i]*change[1+i][2])+(change[1+i][1])\n",
    "    four_y[:,i]=(four_y[:,i]*change[1+i][2])+(change[1+i][1])\n",
    "four_ypre[:,0:2]=four_ypre[:,0:2]*0.1\n",
    "four_y[:,0:2]=four_y[:,0:2]*0.1\n",
    "evaluation(four_ypre[:,0:2],four_y[:,0:2])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "6a925b9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 16.2, 124.7],\n",
       "       [ 16.9, 123.7],\n",
       "       [ 17.4, 123. ],\n",
       "       [ 18. , 122.2]])"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "four_y[20:24,0:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "6dda967d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7feed659c9a0>"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(four_y[20:24,0])+list(four_ypre[20:24,0]),\n",
    "    y=list(four_y[20:24,1])+list(four_ypre[20:24,1]),\n",
    "    s=[0.5]*8,\n",
    "    c=[1]*4+[2]*4,\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "dcbf0cae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.2134863115202212"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ev_ypre=itter(norm_test,8)[0]\n",
    "ev_y=itter(norm_test,8)[1]\n",
    "for i in range(4):\n",
    "    ev_ypre[:,i]=(ev_ypre[:,i]*change[1+i][2])+(change[1+i][1])\n",
    "    ev_y[:,i]=(ev_y[:,i]*change[1+i][2])+(change[1+i][1])\n",
    "ev_ypre[:,0:2]=ev_ypre[:,0:2]*0.1\n",
    "ev_y[:,0:2]=ev_y[:,0:2]*0.1\n",
    "evaluation(ev_ypre[:,0:2],ev_y[:,0:2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "c7d7595c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 16.2, 124.7, 990. ,  23. ],\n",
       "       [ 16.9, 123.7, 985. ,  25. ],\n",
       "       [ 17.4, 123. , 985. ,  25. ],\n",
       "       [ 18. , 122.2, 982. ,  28. ],\n",
       "       [ 18.7, 121.1, 982. ,  28. ],\n",
       "       [ 19.5, 120.2, 982. ,  28. ],\n",
       "       [ 20.1, 118.9, 980. ,  30. ],\n",
       "       [ 21.1, 117.5, 975. ,  33. ]])"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ev_y[24:32,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "65aa3ec8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7feed6640310>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(ev_y[24:32,0])+list(ev_ypre[24:32,0]),\n",
    "    y=list(ev_y[24:32,1])+list(ev_ypre[24:32,1]),\n",
    "    s=[0.5]*16,\n",
    "    c=[1]*8+[2]*8,\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "af92e67e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4.670698560190896"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seven_ypre=itter(norm_test,12)[0]\n",
    "seven_y=itter(norm_test,12)[1]\n",
    "for i in range(4):\n",
    "    seven_ypre[:,i]=(seven_ypre[:,i]*change[1+i][2])+(change[1+i][1])\n",
    "    seven_y[:,i]=(seven_y[:,i]*change[1+i][2])+(change[1+i][1])\n",
    "seven_ypre[:,0:2]=seven_ypre[:,0:2]*0.1\n",
    "seven_y[:,0:2]=seven_y[:,0:2]*0.1\n",
    "evaluation(seven_ypre[:,0:2],seven_y[:,0:2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "1188dd1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 16.2, 124.7],\n",
       "       [ 16.9, 123.7],\n",
       "       [ 17.4, 123. ],\n",
       "       [ 18. , 122.2],\n",
       "       [ 18.7, 121.1],\n",
       "       [ 19.5, 120.2],\n",
       "       [ 20.1, 118.9],\n",
       "       [ 21.1, 117.5],\n",
       "       [ 21.8, 116. ],\n",
       "       [ 22.4, 115. ],\n",
       "       [ 22.8, 113.6],\n",
       "       [ 23.5, 112.3]])"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seven_y[12:24,0:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "63711bef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7feed65a3d30>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(seven_y[12:24,0])+list(seven_ypre[12:24,0]),\n",
    "    y=list(seven_y[12:24,1])+list(seven_ypre[12:24,1]),\n",
    "    s=[0.5]*24,\n",
    "    c=[1]*12+[2]*12,\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "46cf2a99",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a30ed46e",
   "metadata": {},
   "outputs": [],
   "source": [
    "data41=pd.DataFrame(seven_ypre[:,0:2])\n",
    "data41.to_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/length4_predict.csv')\n",
    "data42=pd.DataFrame(seven_y[:,0:2])\n",
    "data42.to_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/length4_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fa314ab",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 926,
   "id": "c5381700",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "128.0"
      ]
     },
     "execution_count": 926,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 908,
   "id": "6a59a2a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7fe5981ca950>"
      ]
     },
     "execution_count": 908,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "scatter_plot = plt.figure()\n",
    "axes1 = scatter_plot.add_subplot(1, 1, 1)\n",
    "axes1.scatter( \n",
    "    x=list(seven_ypre[:,0])+list(seven_y[:,0]),\n",
    "    y=list(seven_ypre[:,1])+list(seven_y[:,1]),\n",
    "    s=[0.5]*(seven_ypre[:,0].shape[0]+seven_y[:,0].shape[0]),\n",
    "    c=[1]*seven_ypre[:,0].shape[0]+[2]*seven_y[:,0].shape[0],\n",
    "    alpha=1 ) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b6d8be5d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5156e414",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a8eef0a4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 866,
   "id": "bdc51d99",
   "metadata": {},
   "outputs": [],
   "source": [
    "data41=pd.DataFrame(Y_pre)\n",
    "data41.to_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/length4_predict.csv')\n",
    "\n",
    "data42=pd.DataFrame(Y_test)\n",
    "data42.to_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/length4_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "958208e8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 922,
   "id": "d8c3c524",
   "metadata": {},
   "outputs": [],
   "source": [
    "data1=pd.DataFrame(y_predict)\n",
    "data1.to_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/y_predict.csv')\n",
    "ytest=y_test.detach().numpy()\n",
    "data2=pd.DataFrame(ytest)\n",
    "data2.to_csv('/Users/cynthia/Desktop/大三下课程/数据挖掘/y_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "299db2ae",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
